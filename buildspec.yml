version: 0.2

phases:
  install:
    runtime-versions:
      node: 14

  pre-build:
    # Installs and exports some varibles from the .fargate config file
    - npm i -g envgate
    - export IMAGE_NAME = $(envgate -t .fargate/config.json -e STAGE $STAGE --get IMAGE_NAME)
    - export ECR_URL = $(envgate -t .fargate/config.json -e STAGE $STAGE --get IMAGE_NAME)
    - export CLUSTER_NAME = $(envgate -t .fargate/config.json -e STAGE $STAGE --get CLUSTER_NAME)
    - export SERVICE_NAME = $(envgate -t .fargate/config.json -e STAGE $STAGE --get SERVICE_NAME)
    - export FAMILY_NAME = $(envgate -t .fargate/config.json -e STAGE $STAGE --get FAMILY_NAME)

  build:
    commands:
      # Build you application here
      - docker build -t $IMAGE_NAME .

  post_build:
    commands:
      - echo "building new taskdef with envgate...."
      - envgate -f .fargate/config.json -e STAGE $STAGE -o task-definition.out.json -t .fargate/task-definition.json
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - docker tag $IMAGE_NAME $ECR_URL
      - docker push $ECR_URL
      - TASK_VERSION=$(aws ecs register-task-definition --family $FAMILY_NAME --cli-input-json file://task-definition.json | jq --raw-output '.taskDefinition.revision')
      - aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --task-definition $FAMILY_NAME:$TASK_VERSION
